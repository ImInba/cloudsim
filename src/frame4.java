
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.cloudbus.cloudsim.CloudletSchedulerTimeShared;
import org.cloudbus.cloudsim.DatacenterBroker;
import org.cloudbus.cloudsim.Vm;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author User112
 */
public class frame4 extends javax.swing.JFrame {

    /**
     * Creates new form frame4
     */
    Connection con;
    public static ArrayList<Vm> vmlist;
    public int pesNumber = 1;
    public static DatacenterBroker[] broker = frame3.bId;
    public static DefaultTableModel model = new DefaultTableModel();
   public static ArrayList<Vm> vbList = new ArrayList<Vm>();
    public frame4() {
        initComponents();
        try {
            jTextField1.setText("");
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/mydb", "root", "root");
            Statement st = con.createStatement();
             } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(650, 600));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Virtual Machines Creation");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, 170, 40));

        jLabel2.setText("Enter the No .of Virtual Machines ");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 180, 30));

        jTextField1.setText("jTextField1");
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 140, 90, 30));

        jButton1.setText("Create VM's");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 140, 110, 30));

        jButton2.setText("Next>>");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 140, 90, 30));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, 570, 320));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel1.setText("Profit/Resource Availability Maximization  on Confederated Cloud Environment");
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 570, 50));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {

            String[] title = {"VM id", "Broker Id", "Mips", "RAM", "BW"};

            jTable1.setModel(model);
            for (int i = 0; i < title.length; i++) {
                model.addColumn(title[i]);
            }
            String input = jTextField1.getText();
            int nofvm = Integer.parseInt(input);
            Random r = new Random();
            Random r1 = new Random();
            Random r2 = new Random();
            vmlist = new ArrayList<Vm>();
         
            int vmid, mips, ram, brokerId;
            long size, bw;
            long[] sizes = {10000, 15000, 20000, 250000};
            int[] rams = {512, 1024, 2048, 3072};
            int[] bws = {1000, 2000, 1500, 3000, 5000};
            String vmm;
            Vm vm1;
            DatacenterBroker sBroker;
            int b;//=r.nextInt(broker.length);
            Statement st1 = con.createStatement();
            st1.execute("delete from vmtable");
            st1.execute("delete from vtable");
            for (int i = 0; i < nofvm; i++) {
                b = r.nextInt(broker.length);
                vmid = i;
                mips = r.nextInt(1000);
                size = sizes[r1.nextInt(4)]; //image size (MB)
                ram = rams[r2.nextInt(4)]; //vm memory (MB)
                bw=r.nextInt(10000);
                //bw = bws[r.nextInt(5)];
                pesNumber = 1; //number of cpus
                vmm = "Xen"; //VMM name          
                brokerId = broker[b].getId();
                vm1 = new Vm(vmid, brokerId, mips, pesNumber, ram, bw, size, vmm, new CloudletSchedulerTimeShared());
                vmlist.add(vm1);
                //   vDetails.add(vmid+"\t"+brokerId+"\t"+mips+"\t"+ram+"\t"+bw+"\n\n");
                Statement st = con.createStatement();
                 st.executeUpdate("insert into vmtable values('" + vmid + "','" + brokerId + "','" + mips + "','" + ram + "','" + bw + "','0','0','0')");
              
                st.executeUpdate("insert into vtable values('" + vmid + "','" + brokerId + "','" + mips + "','" + ram + "','" + bw + "','*','*','0')");
                model.addRow(new Object[]{vmid, brokerId, mips, ram, bw});
                sBroker = broker[b];
                vbList.add(vm1);
                sBroker.submitVmList(vbList);
                vbList.clear();
            }

            JOptionPane.showMessageDialog(null, nofvm + " Virtual Machines created successfully");
//        jTextArea1.append("VM Id"+"\t"+"Broker Id"+"\t"+"Mips"+" \t"+"RAM"+"\t"+"BW\n\n");
//        jTextArea1.append("================================================================\n\n");
//        for(int i=0;i<vDetails.size();i++) {
//            jTextArea1.append(vDetails.get(i).toString()+"\n");
//        }
            JOptionPane.showMessageDialog(null, " Virtual Machines submitted to respective Brokers successfully");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        frame5 cl = new frame5();
        cl.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frame4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frame4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frame4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frame4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frame4().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
