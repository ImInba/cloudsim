
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.cloudbus.cloudsim.Cloudlet;
import org.cloudbus.cloudsim.DatacenterBroker;
import org.cloudbus.cloudsim.UtilizationModel;
import org.cloudbus.cloudsim.UtilizationModelFull;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author User112
 */
public class frame5 extends javax.swing.JFrame {

    /**
     * Creates new form frame5
     */
    Connection con;
    public static int nofCloudlets;
    public static ArrayList<Cloudlet> cloudletList;
    public int pesNumber = 1;
    public static DefaultTableModel model = new DefaultTableModel();
    public static DatacenterBroker[] broker = frame3.bId;

    public frame5() {
        initComponents();
        try {
            jTextField1.setText("");
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/mydb", "root", "root");
            Statement st = con.createStatement();
            try{
                st.executeUpdate("create table cloudlet(id int(30), brokerid int(30), length int(30), filesize int(30), outputsize int(30), Priority varchar(100), value int(10),allotedvm varchar(50),Exectime int(100))");
            }
            catch(Exception e){
                st.execute("delete from cloudlet");
            }
            //st.executeUpdate("insert into cloudlet values('"+id+"','"+brokerId+"','"+length+"','"+fileSize+"','"+outputSize+"')");
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(650, 600));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel1.setText("Profit/Resource Availability Maximization  on Confederated Cloud Environment");
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 570, 50));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("CloudLets Creation");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, 170, 30));

        jLabel2.setText("Enter the No .of CloudLets");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 160, 30));

        jTextField1.setText("jTextField1");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 140, 90, 30));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, 570, 320));

        jButton1.setText("Create Cloudet/Jobs");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 140, 160, 30));

        jButton2.setText("Next>>");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 140, 100, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            
            String input = jTextField1.getText();
            nofCloudlets = Integer.parseInt(input);
            
            String[] title = {"Id", "Broker Id", "legnth", "fileSize", "OutputSize"};
            
            jTable1.setModel(model);
            for (int i = 0; i < title.length; i++) {
                model.addColumn(title[i]);
                
            }

            //   int nofUsers=Integer.parseInt(str1);
            cloudletList = new ArrayList<Cloudlet>();
            Random r = new Random();
            Random r1 = new Random();
            Random r2 = new Random();
            Random r3 = new Random();
            int b;//=r.nextInt(broker.length);
            int brokerId;
            int l, f, o;
            Random rt=new Random();
            ArrayList cList = new ArrayList();
            ArrayList cDetails = new ArrayList();
            DatacenterBroker sBroker;
            int id;
            long length;
            long fileSize;
            long outputSize;
            for (int i = 0; i < nofCloudlets; i++) {
                do {
                    l = r1.nextInt(60000);
                } while (l < 30000);
                do {
                    f = r2.nextInt(6000);
                } while (l < 300);
                do {
                    pesNumber = r3.nextInt(4);
                } while (pesNumber < 1);
                length = (long) l;
                fileSize = (long) f;
                outputSize = (long) f;
                b = r.nextInt(broker.length);
                id = i;
                brokerId = broker[b].getId();
                UtilizationModel utilizationModel = new UtilizationModelFull();
                org.cloudbus.cloudsim.Cloudlet cloudlet1 = new org.cloudbus.cloudsim.Cloudlet(id, length, pesNumber, fileSize, outputSize, utilizationModel, utilizationModel, utilizationModel);
                cloudlet1.setUserId(brokerId);
                cDetails.add(id + "\t" + brokerId + "\t" + length + "\t" + fileSize + "\t" + outputSize + "\t\n\n");
//                                int x=rt.nextInt(3);String pri=null;
//                                    String[] xt={"high","medium","low"};
//                if(x==0){
//                    pri=xt[0];
//                }
//                if(x==1)
//                {
//                    pri=xt[1];
//                }
//                if(x==2)
//                {
//                    pri=xt[2];
//                }
                            
                model.addRow(new Object[]{id, brokerId, length, fileSize, outputSize});
                Statement st = con.createStatement();
                st.executeUpdate("insert into cloudlet values('" + id + "','" + brokerId + "','" + length + "','" + fileSize + "','" + outputSize + "','*','0','*','0')");
                System.out.println("id : " + id);
                sBroker = broker[b];
                cList.add(cloudlet1);
                cloudletList.add(cloudlet1);
                sBroker.submitCloudletList(cList);                
                cList.clear();
            }            
            JOptionPane.showMessageDialog(null, nofCloudlets + " cloudlets created successfully");
            
            JOptionPane.showMessageDialog(null, " Clouldets submitted to respective Brokers successfully");
            for (int i = 0; i < broker.length; i++) {
                System.out.println(i + " 1: " + broker[i].getCloudletList().size());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        frame6 f=new frame6();
        f.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frame5.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frame5.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frame5.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frame5.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frame5().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
