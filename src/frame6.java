
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import org.cloudbus.cloudsim.Cloudlet;
import org.cloudbus.cloudsim.Log;
import org.cloudbus.cloudsim.Vm;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author User112
 */
public class frame6 extends javax.swing.JFrame {

    /**
     * Creates new form frame6
     *
     */
    Statement st;
    Connection con;
    List<Integer> Federation;
    private static List<Vm> vmlist1;
    private static List<Cloudlet> cloudletList1;
    // Datacenter[] dc = new Datacenter[Datacenter_2.dcenter.length];
    public static DefaultTableModel model = new DefaultTableModel();
    ArrayList<String> vmlist = new ArrayList<String>();

    public frame6() {
        initComponents();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/mydb", "root", "root");
            st = con.createStatement();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("View FDC");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 110, 110, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Profit/Resource Availability Maximization  on Confederated Cloud Environment");
        jLabel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 590, 50));

        jButton3.setText("Compute Memory");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 110, 130, 30));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 590, 410));

        jButton2.setText("Next");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 110, 110, 30));

        jButton6.setText("Federate DC");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 120, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 607, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
//            jTextArea1.append("Datacenter\tHostId\tNo.of PE\tRAM\tBW\tMips\tFederated Id\n");
//            String f = "FDC";
            jTextArea1.setText("");
            ArrayList<String> ramlist = new ArrayList<String>();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select Distinct(federation) from datacenter");
            while (rs.next()) {
                ramlist.add(rs.getString(1));
            }
            System.out.println(ramlist);
            Collections.sort(ramlist);
            System.out.println(ramlist);
            for (int i = 0; i < ramlist.size(); i++) {
                st.executeUpdate("create table " + ramlist.get(i) + "(dcname varchar(50),cperbw double,cpermem double, cpermi double, cpersec double,cperstrg double,Mips int(100),mips1Pe int(100),nofPe int(10), nofHost int(10), federation varchar(100))");
            }
            System.out.println(ramlist);

            for (int i = 0; i < ramlist.size(); i++) {
                jTextArea1.append("Datacenters availabale in" + ramlist.get(i) + "\n");
                jTextArea1.append("==========================================================================\n");

                jTextArea1.append("Datacenter\tCperBw\tCosperMemy\tCostperMi\tCostperSec\tCostPerStorage\tMips\tMipsperPe\tNo.ofPe\tNo.of Host\tFederation\n");


                Statement str = con.createStatement();
                ResultSet rsy = str.executeQuery("select * from datacenter where federation='" + ramlist.get(i) + "'");
                while (rsy.next()) {

                    Statement dd = con.createStatement();
                    dd.executeUpdate("insert into " + ramlist.get(i) + " values('" + rsy.getString(1) + "','" + rsy.getDouble(2) + "','" + rsy.getDouble(3) + "','" + rsy.getDouble(4) + "','" + rsy.getDouble(5) + "','" + rsy.getDouble(6) + "','" + rsy.getInt(7) + "','" + rsy.getInt(8) + "','" + rsy.getInt(9) + "','" + rsy.getInt(10) + "','" + rsy.getString(11) + "')");
                    jTextArea1.append(rsy.getString(1) + "\t" + rsy.getDouble(2) + "\t" + rsy.getDouble(3) + "\t" + rsy.getDouble(4) + "\t" + rsy.getDouble(5) + "\t" + rsy.getDouble(6) + "\t" + rsy.getInt(7) + "\t" + rsy.getInt(8) + "\t" + rsy.getInt(9) + "\t" + rsy.getInt(10) + "\t" + rsy.getString(11) + "\n\n");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try {
            jTextArea1.setText("");
            Statement st1 = con.createStatement();
            ArrayList<String> list1 = new ArrayList<String>();
            ResultSet rs1 = st.executeQuery("select distinct(federation) from datacenter");
            while (rs1.next()) {
                list1.add(rs1.getString(1));
            }
            System.out.println(list1);
            Collections.sort(list1);
            System.out.println(list1);
            ArrayList<String> list = new ArrayList<String>();
            ArrayList<String> feed = new ArrayList<String>();
            for (int i = 0; i < list1.size(); i++) {
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery("select dcname,federation from datacenter where federation='" + list1.get(i) + "'");
                while (rs.next()) {
                    list.add(rs.getString(1));
                    feed.add(rs.getString(2));
                }
            }
            System.out.println(list);
            jTextArea1.setText("");
            jTextArea1.append("\tComputing the Available resources in each Datacenters Based on Memory Size\n\n");

            jTextArea1.append("Summary\n\n");

            jTextArea1.append("Federation ID\tDatacenter\t Ram Size\t Status\n");
            jTextArea1.append("=================================================================================\n");
            for (int i = 0; i < list.size(); i++) {
                int ram = 0;
                Statement S = con.createStatement();
                ResultSet r = S.executeQuery("select ram from dchost where dcname='" + list.get(i) + "'");
                while (r.next()) {
                    int ramcapacity = r.getInt(1);
                    ram = ram + ramcapacity;
                }
                System.out.println(list.get(i) + "\t" + ram);
                jTextArea1.append(feed.get(i) + "\t" + list.get(i) + "\t" + ram + "\t Free" + "\n");
                Statement str = con.createStatement();
                str.executeUpdate("insert into fload values('" + feed.get(i) + "','" + list.get(i) + "','" + ram + "','*')");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            frame7 j7 = new frame7();
            j7.setVisible(true);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        try {
            jTextArea1.setText("");
            ArrayList<Integer> mil = new ArrayList<Integer>();
            ArrayList<Long> cost = new ArrayList<Long>();
            ArrayList<Integer> miltemp = new ArrayList<Integer>();
            ArrayList<Long> costtemp = new ArrayList<Long>();
            jTextArea1.append("Initializing......\n\n");
            jTextArea1.append("Creating Federated Clouds Based on the cost And the Mips Execution \n");
            jTextArea1.append("*******************************************************************************\n");
            System.out.println("datacenter\tCost of Mi\t\t Mips\t Cpsec\tNofPe");
            jTextArea1.append("datacenter\tCost of Mi\t\t Mips\t Cpsec\tNofPe\n\n");
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select * from datacenter");
            while (rs.next()) {
                String dcname = rs.getString(1);
                Double costofMi = rs.getDouble(4);
                int Mips = rs.getInt(7);
                mil.add(Mips);
                int nofpe = rs.getInt(9);
                long costpersec = Math.round(costofMi * Mips);
                cost.add(costpersec);
                System.out.println(dcname + "\t" + costofMi + "\t" + Mips + "\t" + costpersec + "\t" + nofpe);
                jTextArea1.append(dcname + "\t" + costofMi + "\t" + Mips + "\t" + costpersec + "\t" + nofpe + "\n\n");
            }
            costtemp.addAll(cost);
            System.out.println("unsorted cost list" + cost);
            Collections.sort(costtemp);
            System.out.println("sorted" + costtemp);
            System.out.println(costtemp.get(costtemp.size() - 1));
            long costy = costtemp.get(costtemp.size() - 1);
            long cost1 = costy / 2;
            System.out.println(cost1);
            long cost2 = costy;
            System.out.println(cost2);
            System.out.println(cost1 + "\t" + cost2);
            System.out.println("unsorted" + cost);


            System.out.println("unsorted" + mil);
            miltemp.addAll(mil);
            Collections.sort(miltemp);
            System.out.println("sorted" + miltemp);
            System.out.println(miltemp.get(miltemp.size() - 1));
            int maxval = miltemp.get(miltemp.size() - 1);
            int divi1 = Math.abs(maxval / 2);
            System.out.println(divi1);
            int divi2 = maxval;
            System.out.println(divi2);
            jTextArea1.append("\tDisplaying Federated Datacenters...........................\n");
            System.out.println(divi1 + "\t" + divi2);
            System.out.println("unsorted" + mil);
            for (int i = 0; i < mil.size(); i++) {
                Statement st4 = con.createStatement();
                String d = "Dcenter" + i;
                if ((mil.get(i) > divi1 || mil.get(i) == divi1) && (cost.get(i) < cost1 || cost.get(i) == cost1)) {
                    
                    String f = "FDCenter1";
                    jTextArea1.append(d + "\t" + mil.get(i) + "\t DCG1 High\n\n");
                    st4.executeUpdate("update datacenter set federation='" + f + "' where dcname='" + d + "'");
                } else if ((mil.get(i) > divi1 || mil.get(i) == divi1) && (cost.get(i) > cost1)) {
                    String f = "FDCenter2";
                    jTextArea1.append(d + "\t" + mil.get(i) + "\t DCG2 Medium\n\n");
                    st4.executeUpdate("update datacenter set federation='" + f + "' where dcname='" + d + "'");
                } else if ((mil.get(i) < divi1) && (cost.get(i) < cost1 || cost.get(i) == cost1)) {
                    String f = "FDCenter3";
                    jTextArea1.append(d + "\t" + mil.get(i) + "\t DCG3 Moderate\n\n");
                    st4.executeUpdate("update datacenter set federation='" + f + "' where dcname='" + d + "'");
                } else {
                    String f = "FDCenter4";
                    jTextArea1.append(d + "\t" + mil.get(i) + "\t DCG4 low\n\n");
                    st4.executeUpdate("update datacenter set federation='" + f + "' where dcname='" + d + "'");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton6ActionPerformed
    private static void printCloudletList(List<Cloudlet> list) {
        int size = list.size();
        Cloudlet cloudlet;

        String indent = "    ";
        Log.printLine();
        Log.printLine("========== OUTPUT ==========");
        Log.printLine("Cloudlet ID" + indent + "STATUS" + indent
                + "Data center ID" + indent + "VM ID" + indent + "Time" + indent + "Start Time" + indent + "Finish Time");

        DecimalFormat dft = new DecimalFormat("###.##");
        for (int i = 0; i < size; i++) {
            cloudlet = list.get(i);
            Log.print(indent + cloudlet.getCloudletId() + indent + indent);

            if (cloudlet.getCloudletStatus() == Cloudlet.SUCCESS) {
                Log.print("SUCCESS");

                Log.printLine(indent + indent + cloudlet.getResourceId() + indent + indent + indent + cloudlet.getVmId()
                        + indent + indent + dft.format(cloudlet.getActualCPUTime()) + indent + indent + dft.format(cloudlet.getExecStartTime())
                        + indent + indent + dft.format(cloudlet.getFinishTime()));
            }
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frame6.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frame6.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frame6.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frame6.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frame6().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
